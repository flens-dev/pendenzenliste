sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation project(':domain')
    implementation project(':gateway')

    implementation 'redis.clients:jedis:4.4.0-m1'

    integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    integrationTestImplementation "org.junit.jupiter:junit-jupiter:5.9.0"
    integrationTestImplementation "org.junit.platform:junit-platform-suite:1.9.1"

    integrationTestImplementation 'org.assertj:assertj-core:3.23.1'
    integrationTestImplementation 'org.mockito:mockito-core:4.8.0'

    integrationTestImplementation 'org.testcontainers:testcontainers:1.17.2'
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()
}

check.dependsOn integrationTest